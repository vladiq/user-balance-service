// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Vladislav Kosogorov"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create a user account with given balance and add an entry to the transfers table",
                "operationId": "account-create",
                "parameters": [
                    {
                        "description": "amount of money on the new account",
                        "name": "amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/accounts/deposit/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Deposit funds to an account and add en entry to the transfers table",
                "operationId": "account-deposit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "amount of money",
                        "name": "amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DepositFunds"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/accounts/withdraw/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Withdraw funds from an account and add en entry to the transfers table",
                "operationId": "account-withdraw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "amount of money",
                        "name": "amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.WithdrawFunds"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get a user account information by its ID",
                "operationId": "account-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account info",
                        "schema": {
                            "$ref": "#/definitions/response.GetAccount"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Get a monthly service revenue report",
                "operationId": "services-monthly-report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The month report will be created for",
                        "name": "month",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/reservations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a reservation",
                "operationId": "create-reservation",
                "parameters": [
                    {
                        "description": "Reservation info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateReservation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reservations/cancel-reservation/{reservation_id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Cancel and delete a reservation returning money back to user",
                "operationId": "cancel-reservation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reservations/confirm-reservation/{reservation_id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Reservations"
                ],
                "summary": "Confirm and delete a reservation adding a record to reports table",
                "operationId": "confirm-reservation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/transfers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Make a money transfer between two user accounts and add balance report entries",
                "operationId": "transfer-create",
                "parameters": [
                    {
                        "description": "transfer info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.MakeTransfer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/transfers/reports/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Gets user transfer list, supports pagination and sorting by date and amount. Page size is 4.",
                "operationId": "transfers-report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "order by 'date' or 'amount'",
                        "name": "order-by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pagination uuid key. Don't set it at first and then the next page keys would appear in response body",
                        "name": "page-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "next_page_id returned would be the next key for pagination",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserTransfers"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Transfer": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "isAccrual": {
                    "type": "boolean"
                }
            }
        },
        "request.CreateAccount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "request.CreateReservation": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "order_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.DepositFunds": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "ID     uuid.UUID ` + "`" + `json:\"id\"` + "`" + `",
                    "type": "number"
                }
            }
        },
        "request.MakeTransfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from_id": {
                    "type": "string"
                },
                "to_id": {
                    "type": "string"
                }
            }
        },
        "request.WithdrawFunds": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "response.GetAccount": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "response.GetUserTransfers": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Transfer"
                    }
                },
                "next_page_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7000",
	BasePath:         "/balance-service",
	Schemes:          []string{},
	Title:            "User Balance Microservice",
	Description:      "A microservice for user balance management, money transferring and report generation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
